#!/usr/bin/env node
const env = process.argv.slice(2);
const exec = require('child_process').exec;

const constants = require('../special-calculations/data/constants');

const {
  GEOGRAPHY_YEAR,
  DECENNIAL_CUR_YEAR,
  DECENNIAL_PREV_YEAR,
  DECENNIAL_SCHEMA_NAME,
  ACS_SCHEMA_NAME,
  ACS_LATEST_TABLE_NAME,
  ACS_EARLIEST_TABLE_NAME,
} = constants;

const etl = (command) => {
  console.log(`Running ETL command: ${command}`);
  exec(command, (err, stdout, stderr) => {
    if (err) {
      console.error(`Error running ETL command: ${err}`);
      console.error(`STDOUT: ${stdout}`);
      console.error(`STDERR: ${stderr}`);
    } else {
      console.log('ETL command completed successfully');
    }
  });
};

let suffix = '';
if (env.length === 1) {
  suffix = env[0].substr(2);
  if (!['dev', 'staging', 'prod'].includes(suffix)) {
    console.error(`\nInvalid environment: ${suffix}\n`);
    process.exit(1);
  }
}

etl(`./migrations/cli.sh etl -d=acs -s=${ACS_SCHEMA_NAME}_${suffix} -y=${ACS_LATEST_TABLE_NAME} -g=${GEOGRAPHY_YEAR} --download --load`);
etl(`./migrations/cli.sh etl -d=acs -s=${ACS_SCHEMA_NAME}_${suffix} -y=${ACS_EARLIEST_TABLE_NAME} -g=${GEOGRAPHY_YEAR} --download --load`);
etl(`./migrations/cli.sh etl -d=decennial -s=${DECENNIAL_SCHEMA_NAME}_${suffix} -y=${DECENNIAL_CUR_YEAR} -g=${GEOGRAPHY_YEAR} --download --load`);
etl(`./migrations/cli.sh etl -d=decennial -s=${DECENNIAL_SCHEMA_NAME}_${suffix} -y=${DECENNIAL_PREV_YEAR} -g=${GEOGRAPHY_YEAR} --download --load`);
